// This file is auto-generated by @hey-api/openapi-ts

import type { Options as ClientOptions, Client, TDataShape } from './client'
import type {
  CreateDatasetForUrlDatasetGeneratePostData,
  CreateDatasetForUrlDatasetGeneratePostResponses,
  CreateDatasetForUrlDatasetGeneratePostErrors,
  GetAllDatasetsDatasetGetData,
  GetAllDatasetsDatasetGetResponses,
  GetAllDatasetsDatasetGetErrors,
  CreateDatasetDatasetPostData,
  CreateDatasetDatasetPostResponses,
  CreateDatasetDatasetPostErrors,
  AnalyzeSimilaritiesDatasetDatasetIdAnalyzeSimilaritiesGetData,
  AnalyzeSimilaritiesDatasetDatasetIdAnalyzeSimilaritiesGetResponses,
  AnalyzeSimilaritiesDatasetDatasetIdAnalyzeSimilaritiesGetErrors,
  CleanSimilaritiesDatasetDatasetIdCleanSimilaritiesPostData,
  CleanSimilaritiesDatasetDatasetIdCleanSimilaritiesPostResponses,
  CleanSimilaritiesDatasetDatasetIdCleanSimilaritiesPostErrors,
  DeleteDatasetDatasetDatasetIdDeleteData,
  DeleteDatasetDatasetDatasetIdDeleteResponses,
  DeleteDatasetDatasetDatasetIdDeleteErrors,
  GetQaByDatasetQaDatasetIdGetData,
  GetQaByDatasetQaDatasetIdGetResponses,
  GetQaByDatasetQaDatasetIdGetErrors,
  GetQaByIdQaIdQaIdGetData,
  GetQaByIdQaIdQaIdGetResponses,
  GetQaByIdQaIdQaIdGetErrors,
  PreviewDatasetTransformationLangfusePreviewGetData,
  PreviewDatasetTransformationLangfusePreviewGetResponses,
  PreviewDatasetTransformationLangfusePreviewGetErrors,
  ExportDatasetLangfuseExportPostData,
  ExportDatasetLangfuseExportPostResponses,
  ExportDatasetLangfuseExportPostErrors,
  RootGetData,
  RootGetResponses,
} from './types.gen'
import { client } from './client.gen'

export type Options<
  TData extends TDataShape = TDataShape,
  ThrowOnError extends boolean = boolean,
> = ClientOptions<TData, ThrowOnError> & {
  /**
   * You can provide a client instance returned by `createClient()` instead of
   * individual options. This might be also useful if you want to implement a
   * custom client.
   */
  client?: Client
  /**
   * You can pass arbitrary values through the `meta` object. This can be
   * used to access values that aren't defined as part of the SDK function.
   */
  meta?: Record<string, unknown>
}

/**
 * Generate a dataset from a URL
 * Create a new dataset by processing the content of a given URL. The process includes text cleaning and question-answer generation.
 */
export const postdatasetgenerate = <ThrowOnError extends boolean = false>(
  options: Options<CreateDatasetForUrlDatasetGeneratePostData, ThrowOnError>
) => {
  return (options.client ?? client).post<
    CreateDatasetForUrlDatasetGeneratePostResponses,
    CreateDatasetForUrlDatasetGeneratePostErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/dataset/generate',
    ...options,
    headers: {
      'Content-Type': 'application/json',
      ...options.headers,
    },
  })
}

/**
 * Get All Datasets
 * Retrieves all datasets or a specific dataset if ID is provided
 */
export const getdataset = <ThrowOnError extends boolean = false>(
  options?: Options<GetAllDatasetsDatasetGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<
    GetAllDatasetsDatasetGetResponses,
    GetAllDatasetsDatasetGetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/dataset',
    ...options,
  })
}

/**
 * Create Dataset
 * Creates a new dataset
 */
export const postdataset = <ThrowOnError extends boolean = false>(
  options: Options<CreateDatasetDatasetPostData, ThrowOnError>
) => {
  return (options.client ?? client).post<
    CreateDatasetDatasetPostResponses,
    CreateDatasetDatasetPostErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/dataset',
    ...options,
  })
}

/**
 * Analyze Similarities
 * Analyzes similar questions in a dataset
 */
export const getdatasetBydataset_idByanalyze_similarities = <ThrowOnError extends boolean = false>(
  options: Options<AnalyzeSimilaritiesDatasetDatasetIdAnalyzeSimilaritiesGetData, ThrowOnError>
) => {
  return (options.client ?? client).get<
    AnalyzeSimilaritiesDatasetDatasetIdAnalyzeSimilaritiesGetResponses,
    AnalyzeSimilaritiesDatasetDatasetIdAnalyzeSimilaritiesGetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/dataset/{dataset_id}/analyze-similarities',
    ...options,
  })
}

/**
 * Clean Similarities
 * Cleans similar questions in a dataset by removing duplicates
 */
export const postdatasetBydataset_idByclean_similarities = <ThrowOnError extends boolean = false>(
  options: Options<CleanSimilaritiesDatasetDatasetIdCleanSimilaritiesPostData, ThrowOnError>
) => {
  return (options.client ?? client).post<
    CleanSimilaritiesDatasetDatasetIdCleanSimilaritiesPostResponses,
    CleanSimilaritiesDatasetDatasetIdCleanSimilaritiesPostErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/dataset/{dataset_id}/clean-similarities',
    ...options,
  })
}

/**
 * Delete Dataset
 * Deletes a dataset and all its associated records
 */
export const deletedatasetBydataset_idBy = <ThrowOnError extends boolean = false>(
  options: Options<DeleteDatasetDatasetDatasetIdDeleteData, ThrowOnError>
) => {
  return (options.client ?? client).delete<
    DeleteDatasetDatasetDatasetIdDeleteResponses,
    DeleteDatasetDatasetDatasetIdDeleteErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/dataset/{dataset_id}',
    ...options,
  })
}

/**
 * Get Qa By Dataset
 * Retrieve all Q&A items for a specific dataset by its ID
 */
export const getq_aBydataset_idBy = <ThrowOnError extends boolean = false>(
  options: Options<GetQaByDatasetQaDatasetIdGetData, ThrowOnError>
) => {
  return (options.client ?? client).get<
    GetQaByDatasetQaDatasetIdGetResponses,
    GetQaByDatasetQaDatasetIdGetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/q_a/{dataset_id}',
    ...options,
  })
}

/**
 * Get Qa By Id
 * Retrieve a specific Q&A item by its ID
 */
export const getq_aidByqa_idBy = <ThrowOnError extends boolean = false>(
  options: Options<GetQaByIdQaIdQaIdGetData, ThrowOnError>
) => {
  return (options.client ?? client).get<
    GetQaByIdQaIdQaIdGetResponses,
    GetQaByIdQaIdQaIdGetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/q_a/id/{qa_id}',
    ...options,
  })
}

/**
 * Preview Dataset Transformation
 * Preview the dataset transformation for Langfuse without sending it
 */
export const getlangfusepreview = <ThrowOnError extends boolean = false>(
  options: Options<PreviewDatasetTransformationLangfusePreviewGetData, ThrowOnError>
) => {
  return (options.client ?? client).get<
    PreviewDatasetTransformationLangfusePreviewGetResponses,
    PreviewDatasetTransformationLangfusePreviewGetErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/langfuse/preview',
    ...options,
  })
}

/**
 * Export Dataset
 * Export a dataset from the database to Langfuse
 */
export const postlangfuseexport = <ThrowOnError extends boolean = false>(
  options: Options<ExportDatasetLangfuseExportPostData, ThrowOnError>
) => {
  return (options.client ?? client).post<
    ExportDatasetLangfuseExportPostResponses,
    ExportDatasetLangfuseExportPostErrors,
    ThrowOnError
  >({
    responseType: 'json',
    url: '/langfuse/export',
    ...options,
  })
}

/**
 * Root
 */
export const get = <ThrowOnError extends boolean = false>(
  options?: Options<RootGetData, ThrowOnError>
) => {
  return (options?.client ?? client).get<RootGetResponses, unknown, ThrowOnError>({
    responseType: 'json',
    url: '/',
    ...options,
  })
}
